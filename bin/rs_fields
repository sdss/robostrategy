#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael R. Blanton
# @Date: Aug 3, 2018
# @Filename: rs_fields_minimal
# @License: BSD 3-Clause
# @Copyright: Michael R. Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import fitsio
import robostrategy.sloane as sloane
import robostrategy.params as params
import sdss_access.path

sdss_path = sdss_access.path.Path()


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Field list creation for SDSS-V')

    parser.add_argument('-p', '--plan', dest='plan',
                        type=str, help='name of plan')

    args = parser.parse_args()
    plan = args.plan

    rsParams = params.RobostrategyParams(plan=plan)

    fields_dtype = [('fieldid', np.int32),
                    ('racen', np.float64),
                    ('deccen', np.float64),
                    ('radius', np.float32),
                    ('type', np.dtype('a30'))]
    fields_north_array = np.zeros(0, dtype=fields_dtype)
    fields_south_array = np.zeros(0, dtype=fields_dtype)

    if('AllSkySloane' in rsParams.cfg['Fields']):
        nsdiv = np.float32(rsParams.cfg['Fields']['NSDiv'])

        fields_north = sloane.Sloane(n=7682, radius=1.49)
        fields_south = sloane.Sloane(n=18752, radius=0.95)

        fields_north.deccut(nsdiv)
        fields_south.deccut(nsdiv, above=False)

        tmp_fields_north_array = np.zeros(len(fields_north.ra),
                                          dtype=fields_dtype)
        tmp_fields_north_array['racen'] = fields_north.ra
        tmp_fields_north_array['deccen'] = fields_north.dec
        tmp_fields_north_array['radius'] = fields_north.radius
        tmp_fields_north_array['type'] = 'AllSkySloane'
        fields_north_array = np.append(fields_north_array,
                                       tmp_fields_north_array)

        tmp_fields_south_array = np.zeros(len(fields_south.ra),
                                          dtype=fields_dtype)
        tmp_fields_south_array['racen'] = fields_south.ra
        tmp_fields_south_array['deccen'] = fields_south.dec
        tmp_fields_south_array['radius'] = fields_south.radius
        tmp_fields_south_array['type'] = 'AllSkySloane'
        fields_south_array = np.append(fields_south_array,
                                       tmp_fields_south_array)

    if('RM' in rsParams.cfg['Fields']):
        in_north_rm_file = os.path.join(os.getenv('ROBOSTRATEGY_DIR'),
                                        'data', 'north-fields-RM-v2.fits')
        in_north_rm = fitsio.read(in_north_rm_file)
        tmp_fields_north_rm = np.zeros(len(in_north_rm), dtype=fields_dtype)
        tmp_fields_north_rm['racen'] = in_north_rm['RA']
        tmp_fields_north_rm['deccen'] = in_north_rm['DEC']
        tmp_fields_north_rm['radius'] = [1.49] * len(in_north_rm)
        tmp_fields_north_rm['type'] = 'RM'
        fields_north_array = np.append(fields_north_array,
                                       tmp_fields_north_rm)

        in_south_rm_file = os.path.join(os.getenv('ROBOSTRATEGY_DIR'),
                                        'data', 'south-fields-RM-v2.fits')
        in_south_rm = fitsio.read(in_south_rm_file)
        tmp_fields_south_rm = np.zeros(len(in_south_rm), dtype=fields_dtype)
        tmp_fields_south_rm['racen'] = in_south_rm['RA']
        tmp_fields_south_rm['deccen'] = in_south_rm['DEC']
        tmp_fields_south_rm['radius'] = [0.95] * len(in_south_rm)
        tmp_fields_south_rm['type'] = 'RM'
        fields_south_array = np.append(fields_south_array,
                                       tmp_fields_south_rm)

    if('RV' in rsParams.cfg['Fields']):
        nsdiv = np.float32(rsParams.cfg['Fields']['NSDiv'])
        in_rv_file = os.path.join(os.getenv('ROBOSTRATEGY_DIR'),
                                  'data', 'MWM-RV-FieldCenters-v05.fits')
        in_rv = fitsio.read(in_rv_file)

        inorth = np.where(in_rv['DECCEN'] > nsdiv)[0]
        tmp_rv_north = np.zeros(len(inorth), dtype=fields_dtype)
        tmp_rv_north['racen'] = in_rv['RACEN'][inorth]
        tmp_rv_north['deccen'] = in_rv['DECCEN'][inorth]
        tmp_rv_north['radius'] = [1.49] * len(inorth)
        tmp_rv_north['type'] = 'RV'
        fields_north_array = np.append(fields_north_array,
                                       tmp_rv_north)

        isouth = np.where(in_rv['DECCEN'] <= nsdiv)[0]
        tmp_rv_south = np.zeros(len(isouth), dtype=fields_dtype)
        tmp_rv_south['racen'] = in_rv['RACEN'][isouth]
        tmp_rv_south['deccen'] = in_rv['DECCEN'][isouth]
        tmp_rv_south['radius'] = [0.95] * len(isouth)
        tmp_rv_south['type'] = 'RV'
        fields_south_array = np.append(fields_south_array,
                                       tmp_rv_south)

    fields_north_array['fieldid'] = np.arange(len(fields_north_array),
                                              dtype=np.int32) + 1
    fields_south_array['fieldid'] = (np.arange(len(fields_south_array),
                                               dtype=np.int32) +
                                     1 + fields_north_array['fieldid'].max())

    fields_north_file = sdss_path.full('rsFields', plan=plan,
                                       observatory='apo')
    fields_south_file = sdss_path.full('rsFields', plan=plan,
                                       observatory='lco')

    fitsio.write(fields_north_file, fields_north_array, clobber=True)
    fitsio.write(fields_south_file, fields_south_array, clobber=True)

    matplotlib.rcParams['figure.figsize'] = (16.0, 8.0)
    fields_north.plot()
    fields_north_png = sdss_path.full('rsFieldsPng', plan=plan,
                                      observatory='apo')
    plt.savefig(fields_north_png, dpi=150)
    plt.clf()

    matplotlib.rcParams['figure.figsize'] = (16.0, 8.0)
    fields_south.plot()
    fields_south_png = sdss_path.full('rsFieldsPng', plan=plan,
                                      observatory='lco')
    plt.savefig(fields_south_png, dpi=150)
    plt.clf()
