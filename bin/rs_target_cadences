#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael R. Blanton
# @Date: Aug 3, 2018
# @Filename: rs_target_cadences
# @License: BSD 3-Clause
# @Copyright: Michael R. Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import time
import argparse
import os
import sys
import numpy as np
import astropy.coordinates as coordinates
import astropy.units as units
import fitsio
import robostrategy
import roboscheduler.cadence as cadence
import robostrategy.field as field
import robostrategy.params as params
import sdss_access.path
import multiprocessing

sdss_path = sdss_access.path.Path(release='sdss5', preserve_envvars=True)

cadencelist = cadence.CadenceList()

if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Field assignment test for Galactic Genesis')

    parser.add_argument('-p', '--plan', dest='plan',
                        type=str, help='name of plan', required=True)
    parser.add_argument('-o', '--observatory', dest='observatory',
                        type=str, help='apo or lco',
                        choices=['apo', 'lco'], required=True)

    args = parser.parse_args()
    plan = args.plan
    observatory = args.observatory

    cadences_file = sdss_path.full('rsCadences', plan=plan,
                                   observatory=observatory)
    cadencelist.fromfits(filename=cadences_file, unpickle=True)

    targets_file = sdss_path.full('rsTargets', plan=plan,
                                  observatory=observatory)
    targets_all = fitsio.read(targets_file)

    tcadence_file = targets_file.replace('rsTargets',
                                         'rsTargetCadences')

    # Make list of all unique target cadences
    tcadences = [x.strip() for x in targets_all['cadence']]
    utcadences = np.unique(np.array(tcadences))
    nutcadences = len(utcadences)

    # Make list of all unique target cartons
    tcartons = [x.strip() for x in targets_all['carton']]
    utcartons = np.unique(np.array(tcartons))
    nutcartons = len(utcartons)

    hd = {'RSTVER': robostrategy.__version__}

    cadence_dtype = [('cadence', np.unicode_, 30)]
    cadence_arr = np.zeros(len(utcadences), dtype=cadence_dtype)
    cadence_arr['cadence'] = utcadences
    fitsio.write(tcadence_file, cadence_arr, header=hd, clobber=True)

    carton_dtype = [('carton', np.unicode_, 30)]
    carton_arr = np.zeros(len(utcartons), dtype=carton_dtype)
    carton_arr['carton'] = utcartons
    fitsio.write(tcadence_file, carton_arr, clobber=False)
