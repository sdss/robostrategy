#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael R. Blanton
# @Date: Aug 3, 2018
# @Filename: rs_targets_ggsp
# @License: BSD 3-Clause
# @Copyright: Michael R. Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import numpy as np
import fitsio
import observesim.db.peewee.targetdb as targetdb
import sdss_access.path

sdss_path = sdss_access.path.Path(release='sdss5')
targetdb.database.autoconnect()


def get_targets():
    nt = targetdb.Target.select(targetdb.Target.ra,
                                targetdb.Target.dec,
                                targetdb.Program.label).join(targetdb.Program).count()
    ts = targetdb.Target.select(targetdb.Target.ra,
                                targetdb.Target.dec,
                                targetdb.Target.pk,
                                targetdb.Program.label).join(targetdb.Program).dicts()

    target_type = np.array(['apogee'] * nt)

    ra = np.zeros(nt, dtype=np.float64)
    dec = np.zeros(nt, dtype=np.float64)
    pk = np.zeros(nt, dtype=np.int64)
    program = [''] * nt
    for indx, t in zip(np.arange(nt), ts):
        ra[indx] = t['ra']
        dec[indx] = t['dec']
        pk[indx] = t['pk']
        program[indx] = t['label']
    program = np.array(program)

    target0 = [('targetid', np.int32),
               ('pk', np.int64),
               ('ra', np.float64),
               ('dec', np.float64),
               ('cadence', 'a20'),
               ('type', 'a20')]
    targets = np.zeros(nt, dtype=target0)
    keep = np.zeros(nt, dtype=np.int32)
    targets['targetid'] = np.arange(nt)
    targets['ra'] = ra
    targets['dec'] = dec
    targets['pk'] = pk

    idisco = np.where(program == 'Disco')[0]
    keep[idisco] = 1
    targets['cadence'][idisco] = ['single'
                                  for t in target_type[idisco]]
    targets['type'][idisco] = [str(t) for t in target_type[idisco]]

    ispiders = np.where(program == 'SPIDERS_AGN')[0]
    keep[ispiders] = 1
    targets['cadence'][ispiders] = ['bhm_spiders_1x4' for t in target_type[ispiders]]
    targets['type'][ispiders] = [str(t) for t in target_type[ispiders]]

    return(targets[keep > 0])


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Export targets as a FITS file')

    parser.add_argument('-p', '--plan', dest='plan',
                        type=str, help='name of plan', required=True)
    parser.add_argument('-o', '--observatory', dest='observatory',
                        type=str, help='apo or lco',
                        choices=['apo', 'lco'], required=True)

    args = parser.parse_args()
    plan = args.plan
    observatory = args.observatory

    targets = get_targets()

    targets_file = sdss_path.full('rsTargets', plan=plan,
                                  observatory=observatory)
    fitsio.write(targets_file, targets, clobber=True)
