#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael R. Blanton
# @Date: Sept 26, 2018
# @Filename: rs_test_assign
# @License: BSD 3-Clause
# @Copyright: Michael R. Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import sys
import os
import argparse
import numpy as np
import fitsio
import roboscheduler.cadence as cadence
import robostrategy.field as field


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Field assignment test for Galactic Genesis')

    parser.add_argument('-o', '--observatory', dest='observatory',
                        type=str, help='apo or lco',
                        choices=['apo', 'lco'], required=True)
    parser.add_argument('-c', '--cadence', dest='cadence',
                        type=str, help='cadence to use',
                        default='dark_single-5', required=False)
    parser.add_argument('-p', '--plan', dest='plan',
                        type=str, help='name of plan', required=True)
    parser.add_argument('-f', '--fieldid', dest='fieldid',
                        type=np.int32, help='field ID', required=True)

    args = parser.parse_args()
    plan = args.plan
    obs = args.observatory
    fieldid = args.fieldid
    field_cadence = args.cadence

    cadencelist = cadence.CadenceList()
    cadences_file = 'rsCadences-{plan}-{obs}.fits'.format(plan=plan, obs=obs)
    cadencelist.fromfits(filename=cadences_file, unpickle=True)

    field_file = 'targets/rsFieldAssignments-{plan}-{obs}-{fieldid}.fits'
    field_file = field_file.format(plan=plan, obs=obs, fieldid=fieldid)
    hdr = fitsio.read_header(field_file, ext=1)
    racen = np.float64(hdr['RACEN'])
    deccen = np.float64(hdr['DecCEN'])

    f = field.Field(racen=racen, deccen=deccen, observatory=obs)
    f.targets_fromfits(field_file)
    f.set_field_cadence(field_cadence)
    f.assign()

    outfile = field_file.replace('rsFieldAssignments', 'rsTest')
    f.tofits(outfile)

    g = field.Field()
    g.fromfits(outfile)

    # outbase = outfile.replace('.fits', '')
    # for indx, rg in enumerate(f.robotgrids):
    #     rg.html(outbase + '-' + str(indx))
